{"mappings":"AAiCIA,MAAO,yGACFC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAK,SAAAC,GACFK,aAAaC,QAAS,aAAaC,KAAKC,UAAUR,EAASS,YAE9DC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MA3C7B,W,IAAsBG,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAWA,UAAA,GAAF,GAAIE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAD,EAC9CG,EAAM,gGAA0GC,OAAVF,EAAU,mBAIpH,OAHIH,IACAI,EAAM,4FAA2GC,OAAfL,EAAO,UAAkBK,OAAVF,EAAU,oBAExHnB,MAAMoB,GACJnB,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAK,SAAAC,GACF,OAAOA,KAEVU,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MCVxC,GACKZ,MAAK,SAAAqB,GCNH,IAAyBC,EACtBC,EACAC,EDKFX,QAAQC,IAAIO,EAAKI,SCPOH,EDQRD,EAAKI,QCPnBF,EAAeG,SAASC,cAAc,SACtCH,EAAMF,EAAMM,QAAO,SAACC,EAAGC,G,IAAIC,EAAWD,EAAXC,YAAaC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAcC,EAASL,EAATK,UAC/DC,EAAgB,GAOtB,OANeC,MAAMC,KAAK9B,KAAK+B,MAAMjC,aAAakC,QAAS,gBACpDC,SAAQ,SAAAC,GACPP,EAAUQ,SAASD,EAAKE,KACxBR,EAAcS,KAAKH,EAAKV,SAGzBH,EAAM,8NAO2BT,OAJwCW,EAAY,iMAKrDX,OADCY,GAAcC,EAAM,wDACSb,OAA9BgB,EAAcU,KAAK,MAAM,OAAoD1B,OAA/Cc,EAAeA,EAAaa,MAAM,EAAG,GAAK,KAAK,qEAGrH,IACHxB,EAAayB,UAAYxB","sources":["src/js/requester-api.js","src/index.js","src/js/render.js"],"sourcesContent":["export function requesterApi(requst = '', numOfPage = 1) {\n    let ref = `https://api.themoviedb.org/3/trending/all/week?api_key=1e7c9642f723687d0411097a32c8e17f&page=${numOfPage}&language=en-US`;\n    if (requst) {\n        ref = `https://api.themoviedb.org/3/search/movie?api_key=1e7c9642f723687d0411097a32c8e17f&query=${requst}&page=${numOfPage}&language=en-US`\n    };\n    return fetch(ref)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiByID(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=1e7c9642f723687d0411097a32c8e17f&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiGenres() {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=1e7c9642f723687d0411097a32c8e17f&language=en-US`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n        .then(response => {\n            localStorage.setItem(`genresList`, JSON.stringify(response.genres));\n        })\n        .catch(error => console.log(error));\n};","import { watchedMovies, queueMovies } from './js/user-storage.js';\nimport { requesterApi, requesterApiByID, requesterApiGenres } from './js/requester-api.js';\nimport { renderHomeCards, renderLibraryCards, renderModal } from './js/render.js';\n\nrequesterApiGenres()\nrequesterApi()\n    .then(data => {\n        console.log(data.results);\n        renderHomeCards(data.results)\n    })\n\n\n\n\n\n","export function renderHomeCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { poster_path, name, title, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = Array.from(JSON.parse(localStorage.getItem(`genresList`)));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderLibraryCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { poster_path, name, title, vote_average, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = Array.from(JSON.parse(localStorage.getItem(`genresList`)));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderModal({ genres, poster_path, title, original_title, vote_average, vote_count, popularity, overview}) {\n    const targetForAdd = document.querySelector('.content');\n    const currentGenres = [];\n    genres.forEach(elem => currentGenres.push(elem.name));\n    targetForAdd.innerHTML = `<div>\n                        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\">\n                        <h2 class=\"card-header\">${title}</h2>\n                        <div class=\"card-stats\">\n                            <p>Vote / Votes</p>\n                            <p>Popularyty</p>\n                            <p>Original Title</p>\n                            <p>Genre</p>\n                        </div>\n                        <div class=\"card-stats-values\">\n                            <p><span>${vote_average}</span> / ${vote_count}</p>\n                            <p>${popularity}</p>\n                            <p>${original_title}</p>\n                            <p>${currentGenres.join(', ')}</p>\n                        </div>\n                        <p class=\"card-about\">About</p>\n                        <p class=\"card-description\">${overview}</p>\n                        <button class=\"card-watched-btn\">add to watched</button>\n                        <button class=\"card-ueue-btn\">add to queue</button>\n                    </div>`;\n};"],"names":["fetch","then","response","ok","Error","status","json","localStorage","setItem","JSON","stringify","genres","catch","error","console","log","requst","arguments","length","numOfPage","ref","concat","data","array","targetForAdd","gen","results","document","querySelector","reduce","acc","param","poster_path","name","title","release_date","genre_ids","currentGenres","Array","from","parse","getItem","forEach","elem","includes","id","push","join","slice","innerHTML"],"version":3,"file":"index.98fc6b46.js.map"}