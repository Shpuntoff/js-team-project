{"mappings":"AAAO,SAASA,EAAgBC,GAC5B,MAAMC,EAAeC,SAASC,cAAc,SACtCC,EAAMJ,EAAMK,QAAO,CAACC,GAAKC,YAAEA,EAAWC,KAAEA,EAAIC,MAAEA,EAAKC,aAAEA,EAAYC,UAAEA,MACrE,MAAMC,EAAgB,GAOtB,OANeC,MAAMC,KAAKC,KAAKC,MAAMC,aAAaC,QAAQ,gBACnDC,SAAQC,IACPT,EAAUU,SAASD,EAAKE,KACxBV,EAAcW,KAAKH,EAAKZ,SAGzBF,EAAM,8NAGmEC,iMAIxCC,GAAcC,wDACfG,EAAcY,KAAK,WAAWd,EAAeA,EAAae,MAAM,EAAG,GAAK,wEAGhH,IACHxB,EAAayB,UAAYtB,ECWzBuB,MAAM,yGACDC,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAKC,IACFZ,aAAaiB,QAAQ,aAAcnB,KAAKoB,UAAUN,EAASO,YAE9DC,OAAMC,GAASC,QAAQC,IAAIF,KA3C7B,SAAsBG,EAAS,GAAIC,EAAY,GAClD,IAAIC,EAAM,gGAAgGD,mBAI1G,OAHID,IACAE,EAAM,4FAA4FF,UAAeC,oBAE9Gf,MAAMgB,GACJf,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAKC,GACKA,IAEVQ,OAAMC,GAASC,QAAQC,IAAIF,KCVxC,GACKV,MAAKgB,IACFL,QAAQC,IAAII,EAAKC,SACjB9C,EAAgB6C,EAAKC","sources":["src/js/render.js","src/js/requester-api.js","src/index.js"],"sourcesContent":["export function renderHomeCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { poster_path, name, title, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = Array.from(JSON.parse(localStorage.getItem(`genresList`)));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderLibraryCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { poster_path, name, title, vote_average, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = Array.from(JSON.parse(localStorage.getItem(`genresList`)));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderModal({ genres, poster_path, title, original_title, vote_average, vote_count, popularity, overview}) {\n    const targetForAdd = document.querySelector('.content');\n    const currentGenres = [];\n    genres.forEach(elem => currentGenres.push(elem.name));\n    targetForAdd.innerHTML = `<div>\n                        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\">\n                        <h2 class=\"card-header\">${title}</h2>\n                        <div class=\"card-stats\">\n                            <p>Vote / Votes</p>\n                            <p>Popularyty</p>\n                            <p>Original Title</p>\n                            <p>Genre</p>\n                        </div>\n                        <div class=\"card-stats-values\">\n                            <p><span>${vote_average}</span> / ${vote_count}</p>\n                            <p>${popularity}</p>\n                            <p>${original_title}</p>\n                            <p>${currentGenres.join(', ')}</p>\n                        </div>\n                        <p class=\"card-about\">About</p>\n                        <p class=\"card-description\">${overview}</p>\n                        <button class=\"card-watched-btn\">add to watched</button>\n                        <button class=\"card-ueue-btn\">add to queue</button>\n                    </div>`;\n};","export function requesterApi(requst = '', numOfPage = 1) {\n    let ref = `https://api.themoviedb.org/3/trending/all/week?api_key=1e7c9642f723687d0411097a32c8e17f&page=${numOfPage}&language=en-US`;\n    if (requst) {\n        ref = `https://api.themoviedb.org/3/search/movie?api_key=1e7c9642f723687d0411097a32c8e17f&query=${requst}&page=${numOfPage}&language=en-US`\n    };\n    return fetch(ref)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiByID(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=1e7c9642f723687d0411097a32c8e17f&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiGenres() {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=1e7c9642f723687d0411097a32c8e17f&language=en-US`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n        .then(response => {\n            localStorage.setItem(`genresList`, JSON.stringify(response.genres));\n        })\n        .catch(error => console.log(error));\n};","import { watchedMovies, queueMovies } from './js/user-storage.js';\nimport { requesterApi, requesterApiByID, requesterApiGenres } from './js/requester-api.js';\nimport { renderHomeCards, renderLibraryCards, renderModal } from './js/render.js';\n\nrequesterApiGenres()\nrequesterApi()\n    .then(data => {\n        console.log(data.results);\n        renderHomeCards(data.results)\n    })\n\n\n\n\n\n"],"names":["$0e271c871dabf025$export$cc66df4ac04f88a8","array","targetForAdd","document","querySelector","gen","reduce","acc","poster_path","name","title","release_date","genre_ids","currentGenres","Array","from","JSON","parse","localStorage","getItem","forEach","elem","includes","id","push","join","slice","innerHTML","fetch","then","response","ok","Error","status","json","setItem","stringify","genres","catch","error","console","log","requst","numOfPage","ref","data","results"],"version":3,"file":"index.388249f9.js.map"}