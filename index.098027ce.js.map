{"mappings":"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","sources":["src/js/requester-api.js","src/js/theme-lite-dark.js","src/js/team-modal.js","src/index.js","src/js/render.js"],"sourcesContent":["const API_KEY = '1e7c9642f723687d0411097a32c8e17f';\n\nexport function requesterApi(requst = '', numOfPage = 1) {\n    let ref = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${numOfPage}&language=en-US`;\n    if (requst) {\n        ref = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${requst}&page=${numOfPage}&language=en-US`\n    };\n    return fetch(ref)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiByID(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiGenres() {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n        .then(response => {\n            localStorage.setItem(`genresList`, JSON.stringify(response.genres));\n        })\n        .catch(error => console.log(error));\n};","const btn = document.querySelector('.btn-theme');\nconst body = document.querySelector('body');\nconst iconLight = document.querySelector('.theme-light');\nconst iconDark = document.querySelector('.theme-night');\n\n// dark_mode\n// light_mode\n\nbtn.addEventListener('click', onClickChangeTheme);\n\nif (localStorage.getItem('theme') === 'dark-theme') {\n  body.classList.add('dark-theme');\n\n  iconDark.textContent = 'dark_mode';\n  iconLight.textContent = '';\n}\nif (localStorage.getItem('theme') === 'light-theme') {\n  body.classList.add('light-theme');\n  iconDark.textContent = '';\n  iconLight.textContent = 'light_mode';\n}\n\nfunction onClickChangeTheme(ev) {\n  ev.preventDefault();\n\n  if (body.classList.contains('dark-theme')) {\n    body.classList.remove('dark-theme');\n    iconDark.textContent = 'light_mode';\n\n    body.classList.add('light-theme');\n    localStorage.setItem('theme', 'light-theme');\n    iconLight.textContent = '';\n  } else {\n    body.classList.remove('light-theme');\n    iconDark.textContent = 'dark_mode';\n\n    body.classList.add('dark-theme');\n    localStorage.setItem('theme', 'dark-theme');\n    iconLight.textContent = '';\n  }\n}\n","(() => {\n    const openModalBtn = document.querySelector('[data-modal-open]');\n    const closeModalBtn = document.querySelector('.team-modal__button');\n    const modal = document.querySelector('.modal-overlay');\n    const body = document.querySelector('body');\n  \n    openModalBtn.addEventListener('click', openModal);\n  \n    function openModal() {\n      modal.classList.remove('is-hidden');\n      window.addEventListener('keydown', onPressEscape);\n      closeModalBtn.addEventListener('click', closeModal);\n      modal.addEventListener('click', backdropCloseModal);\n      body.classList.add('scroll-hidden');\n    }\n    function closeModal() {\n      body.classList.remove('scroll-hidden');\n      closeModalBtn.removeEventListener('click', closeModal);\n      modal.classList.add('is-hidden');\n      modal.removeEventListener('click', closeModal);\n      window.removeEventListener('keydown', onPressEscape);\n    }\n    function onPressEscape(event) {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    }\n    function backdropCloseModal(event) {\n      if (event.currentTarget === event.target) {\n        closeModal();\n      }\n    }\n  })();","import { watchedMovies, queueMovies } from './js/user-storage.js';\nimport { requesterApi, requesterApiByID, requesterApiGenres } from './js/requester-api.js';\nimport { renderHomeCards, renderLibraryCards, renderModal } from './js/render.js';\nimport { btn } from './js/theme-lite-dark.js'\n\nrequesterApiGenres()\nrequesterApi()\n    .then(data => {\n        renderHomeCards(data.results)\n    })\n\n\n\n    import './js/team-modal';\n\n","export function renderHomeCards(array) {\n    document.querySelector('.list')\n        .innerHTML = array.reduce((acc, { id, poster_path, name, title, release_date, genre_ids }) => {\n        const currentGenres = [];\n        JSON.parse(localStorage.getItem(`genresList`))\n            .forEach(elem => {\n                if (genre_ids.includes(elem.id)) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022}</p>\n                        </div>\n                    </li>`\n    }, '');\n};\n\nexport function renderLibraryCards(array) {\n    document.querySelector('.list')\n        .innerHTML = array.reduce((acc, { id, poster_path, name, title, vote_average, release_date, genre_ids }) => {\n        const currentGenres = [];\n        JSON.parse(localStorage.getItem(`genresList`))\n            .forEach(elem => {\n                if (genre_ids.includes(elem.id)) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average.toFixed(1)}</p>\n                        </div>\n                    </li>`\n    }, '');\n};\n\nexport function renderModal({ id, genres, poster_path, title, original_title, vote_average, vote_count, popularity, overview}) {\n    const currentGenres = [];\n    genres.forEach(elem => currentGenres.push(elem.name));\n    document.querySelector('.list')\n        .innerHTML = `<div id=\"${id}\">\n                        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\">\n                        <h2 class=\"card-header\">${title}</h2>\n                        <div class=\"card-stats\">\n                            <p>Vote / Votes</p>\n                            <p>Popularyty</p>\n                            <p>Original Title</p>\n                            <p>Genre</p>\n                        </div>\n                        <div class=\"card-stats-values\">\n                            <p><span>${vote_average.toFixed(1)}</span> / ${vote_count}</p>\n                            <p>${popularity.toFixed(1)}</p>\n                            <p>${original_title}</p>\n                            <p>${currentGenres.join(', ')}</p>\n                        </div>\n                        <p class=\"card-about\">About</p>\n                        <p class=\"card-description\">${overview}</p>\n                        <button class=\"card-watched-btn\">add to watched</button>\n                        <button class=\"card-ueue-btn\">add to queue</button>\n                    </div>`;\n};\n\nexport function renderWatchedOrQueue({ id, genres, poster_path, title, release_date, vote_average}) {\n    const currentGenres = [];\n    JSON.parse(localStorage.getItem(`genresList`))\n        .forEach(ganre => {\n            genres.forEach(elem => {\n                if (ganre.id === elem.id) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        });\n    const data = `<li class=\"item\" id=\"${id}\">\n                    <div class=\"photo__wrapper\">\n                        <a class=\"img__link\" href=\"#\">\n                            <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                        </a>\n                    </div>\n                    <div class=\"data__content\">\n                        <h2 class=\"title\">${title}</h2>\n                        <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average.toFixed(1)}</p>\n                    </div>\n                </li>`;\n    document.querySelector('.list').insertAdjacentHTML('beforeend', data);\n};"],"names":["$0381681f42d83abb$var$API_KEY","$40a3ca8185e7f1fa$var$btn","document","querySelector","$40a3ca8185e7f1fa$var$body","$40a3ca8185e7f1fa$var$iconLight","$40a3ca8185e7f1fa$var$iconDark","addEventListener","ev","preventDefault","classList","contains","remove","textContent","add","localStorage","setItem","getItem","openModalBtn","closeModalBtn","modal","body","closeModal","removeEventListener","window","onPressEscape","event","code","backdropCloseModal","currentTarget","target","fetch","concat","then","response","ok","Error","status","json","JSON","stringify","genres","catch","error","console","log","requst","arguments","length","numOfPage","ref","data","array","results","innerHTML","reduce","acc","param","id","poster_path","name","title","release_date","genre_ids","currentGenres","parse","forEach","elem","includes","push","join","slice"],"version":3,"file":"index.098027ce.js.map"}