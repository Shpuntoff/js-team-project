{"mappings":"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","sources":["src/js/requester-api.js","src/js/render.js","src/js/pagination.js","src/js/theme-lite-dark.js","src/js/team-modal.js","src/index.js"],"sourcesContent":["const API_KEY = '1e7c9642f723687d0411097a32c8e17f';\n\nexport function requesterApi(requst = '', numOfPage = 1) {\n    let ref = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${numOfPage}&language=en-US`;\n    if (requst) {\n        ref = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${requst}&page=${numOfPage}&language=en-US`\n    };\n    return fetch(ref)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                console.log(response);\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiByID(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiGenres() {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n        .then(response => {\n            localStorage.setItem(`genresList`, JSON.stringify(response.genres));\n        })\n        .catch(error => console.log(error));\n};","export function renderHomeCards(array) {\n    document.querySelector('.list')\n        .innerHTML = array.reduce((acc, { id, poster_path, name, title, release_date, genre_ids }) => {\n        const currentGenres = [];\n        JSON.parse(localStorage.getItem(`genresList`))\n            .forEach(elem => {\n                if (genre_ids.includes(elem.id)) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022}</p>\n                        </div>\n                    </li>`\n    }, '');\n};\n\nexport function renderLibraryCards(array) {\n    document.querySelector('.list')\n        .innerHTML = array.reduce((acc, { id, poster_path, name, title, vote_average, release_date, genre_ids }) => {\n        const currentGenres = [];\n        JSON.parse(localStorage.getItem(`genresList`))\n            .forEach(elem => {\n                if (genre_ids.includes(elem.id)) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average.toFixed(1)}</p>\n                        </div>\n                    </li>`\n    }, '');\n};\n\nexport function renderModal({ id, genres, poster_path, title, original_title, vote_average, vote_count, popularity, overview}) {\n    const currentGenres = [];\n    genres.forEach(elem => currentGenres.push(elem.name));\n    document.querySelector('.list')\n        .innerHTML = `<div id=\"${id}\">\n                        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\">\n                        <h2 class=\"card-header\">${title}</h2>\n                        <div class=\"card-stats\">\n                            <p>Vote / Votes</p>\n                            <p>Popularyty</p>\n                            <p>Original Title</p>\n                            <p>Genre</p>\n                        </div>\n                        <div class=\"card-stats-values\">\n                            <p><span>${vote_average.toFixed(1)}</span> / ${vote_count}</p>\n                            <p>${popularity.toFixed(1)}</p>\n                            <p>${original_title}</p>\n                            <p>${currentGenres.join(', ')}</p>\n                        </div>\n                        <p class=\"card-about\">About</p>\n                        <p class=\"card-description\">${overview}</p>\n                        <button class=\"card-watched-btn\">add to watched</button>\n                        <button class=\"card-ueue-btn\">add to queue</button>\n                    </div>`;\n};\n\nexport function renderWatchedOrQueue({ id, genres, poster_path, title, release_date, vote_average}) {\n    const currentGenres = [];\n    JSON.parse(localStorage.getItem(`genresList`))\n        .forEach(ganre => {\n            genres.forEach(elem => {\n                if (ganre.id === elem.id) {\n                    currentGenres.push(elem.name);\n                };\n            });\n        });\n    const data = `<li class=\"item\" id=\"${id}\">\n                    <div class=\"photo__wrapper\">\n                        <a class=\"img__link\" href=\"#\">\n                            <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                        </a>\n                    </div>\n                    <div class=\"data__content\">\n                        <h2 class=\"title\">${title}</h2>\n                        <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average.toFixed(1)}</p>\n                    </div>\n                </li>`;\n    document.querySelector('.list').insertAdjacentHTML('beforeend', data);\n};","import {\n  requesterApi,\n  requesterApiByID,\n  requesterApiGenres,\n} from './requester-api.js';\nimport {renderHomeCards} from './render.js';\n\nlet globalCurrentpage\nlet globalAllPages\n\nconst pagination = document.querySelector('.pagination');\npagination.addEventListener('click', handlerPagination);\n\nexport function renderPagination(currentPage, allPages) {\n  let markup = '';\n  let nextPage = currentPage + 1;\n  let nextPageTwo = currentPage + 2;\n  let beforePage = currentPage - 1;\n  let beforePageTwo = currentPage - 2;\n  globalCurrentpage = currentPage;\n  globalAllPages = allPages;\n\n  if (currentPage > 1) {\n    markup += `<li class='arrow'>&#129144;</li>`;\n  }\n  if (currentPage > 1) {\n    markup += `<li class='pagination__link pagination__link--first'>1</li>`;\n  }\n  if (currentPage > 4) {\n    markup += `<li class='pagination__link pagination__link--point'>...</li>`;\n  }\n  if (currentPage > 3) {\n    markup += `<li class='pagination__link'>${beforePageTwo}</li>`;\n  }\n  if (currentPage > 2) {\n    markup += `<li class='pagination__link'>${beforePage}</li>`;\n  }\n\n  markup += `<li class='pagination__link--active'>${currentPage}</li>`;\n\n  if (allPages - 1 > currentPage) {\n    markup += `<li class='pagination__link'>${nextPage}</li>`;\n  }\n\n  if (allPages - 2 > currentPage) {\n    markup += `<li class='pagination__link'>${nextPageTwo}</li>`;\n  }\n\n  if (allPages - 3 > currentPage) {\n    markup += `<li class='pagination__link pagination__link--point'>...</li>`;\n  }\n\n  if (allPages > currentPage) {\n    markup += `<li class='pagination__link pagination__link--last'>${allPages}</li>`;\n    markup += `<li class='arrow'>&#129146;<li>`;\n  }\n\n  pagination.innerHTML = markup;\n}\n\nfunction handlerPagination(e) {\n  // let markup = '';\n  if (e.target.nodeName !== 'LI') {\n    return;\n  }\n  if (e.target.textContent === \"...\") {\n    return\n  }\n\n//   globalCurrentpage = e.target.textContent\n//   requesterApi(requst = '', globalCurrentpage)\n//  .then(data => {\n//    renderPagination(data.page, data.total_pages)\n//    renderHomeCards(data.results);\n//    console.log(globalCurrentpage);\n//      return;\n//  })\n\n\n  if (e.target.textContent === '🡸') {\n    requesterApi(requst = '', globalCurrentpage -= 1)\n    .then(data => {\n      renderPagination(data.page, data.total_pages)\n      renderHomeCards(data.results);\n   console.log(globalCurrentpage);\n\n        return;\n    })\n  }\n\n  if (e.target.textContent === '🡺') {\n    requesterApi(requst = '', globalCurrentpage += 1)\n    .then(data => {\n      renderPagination(data.page, data.total_pages)\n      renderHomeCards(data.results);\n   console.log(globalCurrentpage);\n\n        return;\n    })\n     }\n\n    \n\n  \n}\n","const btn = document.querySelector('.btn-theme');\nconst body = document.querySelector('body');\nconst iconLight = document.querySelector('.theme-light');\nconst iconDark = document.querySelector('.theme-night');\n\n// dark_mode\n// light_mode\n\nbtn.addEventListener('click', onClickChangeTheme);\n\nif (localStorage.getItem('theme') === 'dark-theme') {\n  body.classList.add('dark-theme');\n\n  iconDark.textContent = 'dark_mode';\n  iconLight.textContent = '';\n}\nif (localStorage.getItem('theme') === 'light-theme') {\n  body.classList.add('light-theme');\n  iconDark.textContent = '';\n  iconLight.textContent = 'light_mode';\n}\n\nfunction onClickChangeTheme(ev) {\n  ev.preventDefault();\n\n  if (body.classList.contains('dark-theme')) {\n    body.classList.remove('dark-theme');\n    iconDark.textContent = 'light_mode';\n\n    body.classList.add('light-theme');\n    localStorage.setItem('theme', 'light-theme');\n    iconLight.textContent = '';\n  } else {\n    body.classList.remove('light-theme');\n    iconDark.textContent = 'dark_mode';\n\n    body.classList.add('dark-theme');\n    localStorage.setItem('theme', 'dark-theme');\n    iconLight.textContent = '';\n  }\n}\n","(() => {\n    const openModalBtn = document.querySelector('[data-modal-open]');\n    const closeModalBtn = document.querySelector('.team-modal__button');\n    const modal = document.querySelector('.modal-overlay');\n    const body = document.querySelector('body');\n  \n    openModalBtn.addEventListener('click', openModal);\n  \n    function openModal() {\n      modal.classList.remove('is-hidden');\n      window.addEventListener('keydown', onPressEscape);\n      closeModalBtn.addEventListener('click', closeModal);\n      modal.addEventListener('click', backdropCloseModal);\n      body.classList.add('scroll-hidden');\n    }\n    function closeModal() {\n      body.classList.remove('scroll-hidden');\n      closeModalBtn.removeEventListener('click', closeModal);\n      modal.classList.add('is-hidden');\n      modal.removeEventListener('click', closeModal);\n      window.removeEventListener('keydown', onPressEscape);\n    }\n    function onPressEscape(event) {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    }\n    function backdropCloseModal(event) {\n      if (event.currentTarget === event.target) {\n        closeModal();\n      }\n    }\n  })();","import { watchedMovies, queueMovies } from './js/user-storage.js';\nimport { requesterApi, requesterApiByID, requesterApiGenres } from './js/requester-api.js';\nimport { renderHomeCards, renderLibraryCards, renderModal } from './js/render.js';\nimport {renderPagination} from './js/pagination.js';\nimport { btn } from './js/theme-lite-dark.js'\n\nrequesterApiGenres()\nrequesterApi()\n    .then(data => {\n        renderHomeCards(data.results)\n        renderPagination(data.page, data.total_pages)\n    })\n\n\n\n    import './js/team-modal';\n\n\n\n\n"],"names":["$11dc707d6e5eb2de$export$96e061f68a347bf4","requst","numOfPage","ref","fetch","then","response","ok","Error","status","json","console","log","catch","error","$0e271c871dabf025$export$cc66df4ac04f88a8","array","document","querySelector","innerHTML","reduce","acc","id","poster_path","name","title","release_date","genre_ids","currentGenres","JSON","parse","localStorage","getItem","forEach","elem","includes","push","join","slice","$1bab9c519cfa82bc$var$globalCurrentpage","$1bab9c519cfa82bc$var$globalAllPages","$1bab9c519cfa82bc$var$pagination","$1bab9c519cfa82bc$export$825408fbca4f2040","currentPage","allPages","markup","addEventListener","e","target","nodeName","textContent","data","page","total_pages","results","$053660c19111dece$var$btn","$053660c19111dece$var$body","$053660c19111dece$var$iconLight","$053660c19111dece$var$iconDark","ev","preventDefault","classList","contains","remove","add","setItem","openModalBtn","closeModalBtn","modal","body","closeModal","removeEventListener","window","onPressEscape","event","code","backdropCloseModal","currentTarget","stringify","genres"],"version":3,"file":"index.da70b360.js.map"}