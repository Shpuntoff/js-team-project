{"mappings":"YAAA,IAAMA,EAAU,mCCAhB,IAAMC,EAAMC,SAASC,cAAc,cAC7BC,EAAOF,SAASC,cAAc,QAC9BE,EAAYH,SAASC,cAAc,gBACnCG,EAAWJ,SAASC,cAAc,gBAExCF,EAAIM,iBAAiB,SAarB,SAA4BC,GAC1BA,EAAGC,iBAECL,EAAKM,UAAUC,SAAS,eAC1BP,EAAKM,UAAUE,OAAO,cACtBN,EAASO,MAAMC,QAAU,OAEzBV,EAAKM,UAAUK,IAAI,eACnBC,aAAaC,QAAQ,QAAS,eAC9BZ,EAAUQ,MAAMC,QAAU,UAE1BV,EAAKM,UAAUE,OAAO,eACtBN,EAASO,MAAMC,QAAU,QAEzBV,EAAKM,UAAUK,IAAI,cACnBC,aAAaC,QAAQ,QAAS,cAC9BZ,EAAUQ,MAAMC,QAAU,WA3BQ,eAAlCE,aAAaE,QAAQ,WACvBd,EAAKM,UAAUK,IAAI,cACnBT,EAASO,MAAMC,QAAU,QACzBT,EAAUQ,MAAMC,QAAU,QAEU,gBAAlCE,aAAaE,QAAQ,WACvBd,EAAKM,UAAUK,IAAI,eACnBT,EAASO,MAAMC,QAAU,OACzBT,EAAUQ,MAAMC,QAAU,SDoBxBK,MAAM,yDAAiEC,OAARpB,EAAQ,oBAClEqB,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAK,SAAAC,GACFN,aAAaC,QAAS,aAAaU,KAAKC,UAAUN,EAASO,YAE9DC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MA3C7B,W,IAAsBG,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAWA,UAAA,GAAF,GAAIE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAD,EAC9CG,EAAM,4DAA4ElB,OAAhBpB,EAAQ,UAAkBoB,OAAViB,EAAU,mBAIhG,OAHIH,IACAI,EAAM,qDAAsElB,OAAjBpB,EAAQ,WAAwBoB,OAAfc,EAAO,UAAkBd,OAAViB,EAAU,oBAElGlB,MAAMmB,GACJjB,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,UAEnBL,MAAK,SAAAC,GACF,OAAOA,KAEVQ,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,MEVxC,GACKV,MAAK,SAAAkB,GCiBH,IAA4BC,EACzBC,EACAC,EAFyBF,EDhBRD,EAAKI,QCiBtBF,EAAevC,SAASC,cAAc,SACtCuC,EAAMF,EAAMI,QAAO,SAACC,EAAGC,G,IAAIC,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAYL,EAAZK,aAAcC,EAAYN,EAAZM,aAAcC,EAASP,EAATO,UACjFC,EAAgB,GAOtB,OANe3B,KAAK4B,MAAMvC,aAAaE,QAAS,eACzCsC,SAAQ,SAAAC,GACPJ,EAAUK,SAASD,EAAKV,KACxBO,EAAcK,KAAKF,EAAKR,SAGzBJ,EAAM,wBAGmEzB,OAH3C2B,EAAG,gNAOA3B,OAJwC4B,EAAY,iMAKrD5B,OADC6B,GAAcC,EAAM,wDACS9B,OAA9BkC,EAAcM,KAAK,MAAM,OAAuDxC,OAAlDgC,EAAeA,EAAaS,MAAM,EAAG,GAAK,KAAK,KAA2BzC,OAAxB+B,EAAaW,QAAQ,GAAG,qEAGhJ,IACHrB,EAAasB,UAAYrB,K","sources":["src/js/requester-api.js","src/js/theme-lite-dark.js","src/my-library.js","src/js/render.js"],"sourcesContent":["const API_KEY = '1e7c9642f723687d0411097a32c8e17f';\n\nexport function requesterApi(requst = '', numOfPage = 1) {\n    let ref = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${numOfPage}&language=en-US`;\n    if (requst) {\n        ref = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${requst}&page=${numOfPage}&language=en-US`\n    };\n    return fetch(ref)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiByID(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(response => {\n                return response;\n            })\n            .catch(error => console.log(error));\n};\n\nexport function requesterApiGenres() {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n        .then(response => {\n            localStorage.setItem(`genresList`, JSON.stringify(response.genres));\n        })\n        .catch(error => console.log(error));\n};","const btn = document.querySelector('.btn-theme');\nconst body = document.querySelector('body');\nconst iconLight = document.querySelector('.theme-light');\nconst iconDark = document.querySelector('.theme-night');\n\nbtn.addEventListener('click', onClickChangeTheme);\n\nif (localStorage.getItem('theme') === 'dark-theme') {\n  body.classList.add('dark-theme');\n  iconDark.style.display = 'block';\n  iconLight.style.display = 'none';\n}\nif (localStorage.getItem('theme') === 'light-theme') {\n  body.classList.add('light-theme');\n  iconDark.style.display = 'none';\n  iconLight.style.display = 'block';\n}\n\nfunction onClickChangeTheme(ev) {\n  ev.preventDefault();\n\n  if (body.classList.contains('dark-theme')) {\n    body.classList.remove('dark-theme');\n    iconDark.style.display = 'none';\n\n    body.classList.add('light-theme');\n    localStorage.setItem('theme', 'light-theme');\n    iconLight.style.display = 'block';\n  } else {\n    body.classList.remove('light-theme');\n    iconDark.style.display = 'block';\n\n    body.classList.add('dark-theme');\n    localStorage.setItem('theme', 'dark-theme');\n    iconLight.style.display = 'none';\n  }\n}\n","import { watchedMovies, queueMovies } from './js/user-storage.js';\nimport { requesterApi, requesterApiByID, requesterApiGenres } from './js/requester-api.js';\nimport { renderHomeCards, renderLibraryCards, renderModal } from './js/render.js';\nimport { btn } from './js/theme-lite-dark.js'\n\n\nrequesterApiGenres()\nrequesterApi()\n    .then(data => {\n        renderLibraryCards(data.results)\n    })\n\n\n// requesterApiByID(361743)\n//     .then(data => {\n//         renderModal(data)\n//     })","export function renderHomeCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { id, poster_path, name, title, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = JSON.parse(localStorage.getItem(`genresList`));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderLibraryCards(array) {\n    const targetForAdd = document.querySelector('.list');\n    const gen = array.reduce((acc, { id, poster_path, name, title, vote_average, release_date, genre_ids }) => {\n        const currentGenres = [];\n        const genres = JSON.parse(localStorage.getItem(`genresList`));\n        genres.forEach(elem => {\n            if (genre_ids.includes(elem.id)) {\n                currentGenres.push(elem.name);\n            };\n        });\n        return acc + `<li class=\"item\" id=\"${id}\">\n                        <div class=\"photo__wrapper\">\n                            <a class=\"img__link\" href=\"#\">\n                                <img class=\"img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" width=\"395\"\">\n                            </a>\n                        </div>\n                        <div class=\"data__content\">\n                            <h2 class=\"title\">${name ? name : title}</h2>\n                            <p  class=\"text\">${currentGenres.join(', ')} | ${release_date ? release_date.slice(0, 4) : 2022} ${vote_average.toFixed(1)}</p>\n                        </div>\n                    </li>`\n    }, '');\n    targetForAdd.innerHTML = gen;\n};\n\nexport function renderModal({ id, genres, poster_path, title, original_title, vote_average, vote_count, popularity, overview}) {\n    const targetForAdd = document.querySelector('.list');\n    const currentGenres = [];\n    genres.forEach(elem => currentGenres.push(elem.name));\n    targetForAdd.innerHTML = `<div id=\"${id}\">\n                        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\">\n                        <h2 class=\"card-header\">${title}</h2>\n                        <div class=\"card-stats\">\n                            <p>Vote / Votes</p>\n                            <p>Popularyty</p>\n                            <p>Original Title</p>\n                            <p>Genre</p>\n                        </div>\n                        <div class=\"card-stats-values\">\n                            <p><span>${vote_average.toFixed(1)}</span> / ${vote_count}</p>\n                            <p>${popularity.toFixed(1)}</p>\n                            <p>${original_title}</p>\n                            <p>${currentGenres.join(', ')}</p>\n                        </div>\n                        <p class=\"card-about\">About</p>\n                        <p class=\"card-description\">${overview}</p>\n                        <button class=\"card-watched-btn\">add to watched</button>\n                        <button class=\"card-ueue-btn\">add to queue</button>\n                    </div>`;\n};"],"names":["$0381681f42d83abb$var$API_KEY","$40a3ca8185e7f1fa$var$btn","document","querySelector","$40a3ca8185e7f1fa$var$body","$40a3ca8185e7f1fa$var$iconLight","$40a3ca8185e7f1fa$var$iconDark","addEventListener","ev","preventDefault","classList","contains","remove","style","display","add","localStorage","setItem","getItem","fetch","concat","then","response","ok","Error","status","json","JSON","stringify","genres","catch","error","console","log","requst","arguments","length","numOfPage","ref","data","array","targetForAdd","gen","results","reduce","acc","param","id","poster_path","name","title","vote_average","release_date","genre_ids","currentGenres","parse","forEach","elem","includes","push","join","slice","toFixed","innerHTML"],"version":3,"file":"my-library.13167bd0.js.map"}